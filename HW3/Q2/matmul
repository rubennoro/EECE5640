	.file	"matmulAVX.c"
	.text
	.globl	CLOCK
	.type	CLOCK, @function
CLOCK:
.LFB4379:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	leaq	-16(%rbp), %rax
	movq	%rax, %rsi
	movl	$1, %edi
	call	clock_gettime
	movq	-16(%rbp), %rax
	imulq	$1000, %rax, %rax
	vcvtsi2sdq	%rax, %xmm1, %xmm1
	movq	-8(%rbp), %rax
	vcvtsi2sdq	%rax, %xmm2, %xmm2
	vmovsd	.LC0(%rip), %xmm0
	vmulsd	%xmm0, %xmm2, %xmm0
	vaddsd	%xmm0, %xmm1, %xmm0
	vmovq	%xmm0, %rax
	vmovq	%rax, %xmm0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE4379:
	.size	CLOCK, .-CLOCK
	.section	.rodata
.LC4:
	.string	"No AVX Time : %f\n"
.LC5:
	.string	"No AVX Result: %f\n"
.LC6:
	.string	"AVX Time: %f\n"
.LC7:
	.string	"AVX Result: %f\n"
	.text
	.globl	main
	.type	main, @function
main:
.LFB4380:
	.cfi_startproc
	leaq	8(%rsp), %r10
	.cfi_def_cfa 10, 0
	andq	$-64, %rsp
	pushq	-8(%r10)
	pushq	%rbp
	movq	%rsp, %rbp
	.cfi_escape 0x10,0x6,0x2,0x76,0
	pushq	%r10
	.cfi_escape 0xf,0x3,0x76,0x78,0x6
	subq	$50332392, %rsp
	movl	%edi, -50332340(%rbp)
	movq	%rsi, -50332352(%rbp)
	movl	$0, -52(%rbp)
	jmp	.L4
.L7:
	movl	$0, -56(%rbp)
	jmp	.L5
.L6:
	movl	-56(%rbp), %eax
	movslq	%eax, %rdx
	movl	-52(%rbp), %eax
	cltq
	salq	$11, %rax
	addq	%rdx, %rax
	vmovss	.LC1(%rip), %xmm0
	vmovss	%xmm0, -16777904(%rbp,%rax,4)
	movl	-56(%rbp), %eax
	movslq	%eax, %rdx
	movl	-52(%rbp), %eax
	cltq
	salq	$11, %rax
	addq	%rdx, %rax
	vmovss	.LC2(%rip), %xmm0
	vmovss	%xmm0, -33555120(%rbp,%rax,4)
	movl	-56(%rbp), %eax
	movslq	%eax, %rdx
	movl	-52(%rbp), %eax
	cltq
	salq	$11, %rax
	addq	%rdx, %rax
	vxorps	%xmm0, %xmm0, %xmm0
	vmovss	%xmm0, -50332336(%rbp,%rax,4)
	addl	$1, -56(%rbp)
.L5:
	cmpl	$2047, -56(%rbp)
	jle	.L6
	addl	$1, -52(%rbp)
.L4:
	cmpl	$2047, -52(%rbp)
	jle	.L7
	movl	$0, %eax
	call	CLOCK
	vmovq	%xmm0, %rax
	movq	%rax, -184(%rbp)
	movl	$0, -52(%rbp)
	jmp	.L8
.L13:
	movl	$0, -56(%rbp)
	jmp	.L9
.L12:
	movl	$0, -60(%rbp)
	jmp	.L10
.L11:
	movl	-56(%rbp), %eax
	movslq	%eax, %rdx
	movl	-52(%rbp), %eax
	cltq
	salq	$11, %rax
	addq	%rdx, %rax
	vmovss	-50332336(%rbp,%rax,4), %xmm1
	movl	-60(%rbp), %eax
	movslq	%eax, %rdx
	movl	-52(%rbp), %eax
	cltq
	salq	$11, %rax
	addq	%rdx, %rax
	vmovss	-16777904(%rbp,%rax,4), %xmm2
	movl	-56(%rbp), %eax
	movslq	%eax, %rdx
	movl	-60(%rbp), %eax
	cltq
	salq	$11, %rax
	addq	%rdx, %rax
	vmovss	-33555120(%rbp,%rax,4), %xmm0
	vmulss	%xmm0, %xmm2, %xmm0
	vaddss	%xmm0, %xmm1, %xmm0
	movl	-56(%rbp), %eax
	movslq	%eax, %rdx
	movl	-52(%rbp), %eax
	cltq
	salq	$11, %rax
	addq	%rdx, %rax
	vmovss	%xmm0, -50332336(%rbp,%rax,4)
	addl	$1, -60(%rbp)
.L10:
	cmpl	$2047, -60(%rbp)
	jle	.L11
	addl	$1, -56(%rbp)
.L9:
	cmpl	$2047, -56(%rbp)
	jle	.L12
	addl	$1, -52(%rbp)
.L8:
	cmpl	$2047, -52(%rbp)
	jle	.L13
	movl	$0, %eax
	call	CLOCK
	vmovq	%xmm0, %rax
	movq	%rax, -192(%rbp)
	vmovsd	-192(%rbp), %xmm0
	vsubsd	-184(%rbp), %xmm0, %xmm0
	vmovsd	%xmm0, -200(%rbp)
	movq	-200(%rbp), %rax
	vmovq	%rax, %xmm0
	movl	$.LC4, %edi
	movl	$1, %eax
	call	printf
	vmovss	-50332336(%rbp), %xmm0
	vcvtss2sd	%xmm0, %xmm0, %xmm3
	vmovq	%xmm3, %rax
	vmovq	%rax, %xmm0
	movl	$.LC5, %edi
	movl	$1, %eax
	call	printf
	movl	$0, -52(%rbp)
	jmp	.L14
.L17:
	movl	$0, -56(%rbp)
	jmp	.L15
.L16:
	movl	-56(%rbp), %eax
	movslq	%eax, %rdx
	movl	-52(%rbp), %eax
	cltq
	salq	$11, %rax
	addq	%rdx, %rax
	vxorps	%xmm0, %xmm0, %xmm0
	vmovss	%xmm0, -50332336(%rbp,%rax,4)
	addl	$1, -56(%rbp)
.L15:
	cmpl	$2047, -56(%rbp)
	jle	.L16
	addl	$1, -52(%rbp)
.L14:
	cmpl	$2047, -52(%rbp)
	jle	.L17
	movl	$0, %eax
	call	CLOCK
	vmovq	%xmm0, %rax
	movq	%rax, -184(%rbp)
	movl	$0, -52(%rbp)
	jmp	.L18
.L27:
	movl	$0, -56(%rbp)
	jmp	.L19
.L26:
	vxorps	%xmm0, %xmm0, %xmm0
	vmovaps	%zmm0, -176(%rbp)
	movl	$0, -60(%rbp)
	jmp	.L21
.L25:
	movl	-60(%rbp), %eax
	movslq	%eax, %rdx
	movl	-52(%rbp), %eax
	cltq
	salq	$11, %rax
	addq	%rdx, %rax
	vmovss	-16777904(%rbp,%rax,4), %xmm0
	vmovss	%xmm0, -572(%rbp)
	vbroadcastss	-572(%rbp), %zmm0
	vmovaps	%zmm0, -304(%rbp)
	leaq	-33555120(%rbp), %rdx
	movl	-56(%rbp), %eax
	movslq	%eax, %rcx
	movl	-60(%rbp), %eax
	cltq
	salq	$11, %rax
	addq	%rcx, %rax
	salq	$2, %rax
	addq	%rdx, %rax
	movq	%rax, -568(%rbp)
	movq	-568(%rbp), %rax
	vmovups	(%rax), %zmm0
	vmovaps	%zmm0, -368(%rbp)
	vmovaps	-304(%rbp), %zmm0
	vmovaps	%zmm0, -432(%rbp)
	vmovaps	-368(%rbp), %zmm0
	vmovaps	%zmm0, -496(%rbp)
	vmovaps	-176(%rbp), %zmm0
	vmovaps	%zmm0, -560(%rbp)
	vmovaps	-432(%rbp), %zmm0
	vmovaps	-496(%rbp), %zmm2
	vmovaps	-560(%rbp), %zmm1
	movl	$-1, %eax
	kmovw	%eax, %k1
	vfmadd132ps	%zmm2, %zmm1, %zmm0{%k1}
	nop
	vmovaps	%zmm0, -176(%rbp)
	addl	$1, -60(%rbp)
.L21:
	cmpl	$2047, -60(%rbp)
	jle	.L25
	leaq	-50332336(%rbp), %rdx
	movl	-56(%rbp), %eax
	movslq	%eax, %rcx
	movl	-52(%rbp), %eax
	cltq
	salq	$11, %rax
	addq	%rcx, %rax
	salq	$2, %rax
	addq	%rdx, %rax
	movq	%rax, -584(%rbp)
	vmovaps	-176(%rbp), %zmm0
	vmovaps	%zmm0, -688(%rbp)
	vmovaps	-688(%rbp), %zmm0
	movq	-584(%rbp), %rax
	vmovups	%zmm0, (%rax)
	nop
	addl	$16, -56(%rbp)
.L19:
	cmpl	$2047, -56(%rbp)
	jle	.L26
	addl	$1, -52(%rbp)
.L18:
	cmpl	$2047, -52(%rbp)
	jle	.L27
	movl	$0, %eax
	call	CLOCK
	vmovq	%xmm0, %rax
	movq	%rax, -192(%rbp)
	vmovsd	-192(%rbp), %xmm0
	vsubsd	-184(%rbp), %xmm0, %xmm0
	vmovsd	%xmm0, -200(%rbp)
	movq	-200(%rbp), %rax
	vmovq	%rax, %xmm0
	movl	$.LC6, %edi
	movl	$1, %eax
	call	printf
	vmovss	-50332336(%rbp), %xmm0
	vcvtss2sd	%xmm0, %xmm0, %xmm4
	vmovq	%xmm4, %rax
	vmovq	%rax, %xmm0
	movl	$.LC7, %edi
	movl	$1, %eax
	call	printf
	movl	$0, %eax
	movq	-8(%rbp), %r10
	.cfi_def_cfa 10, 0
	leave
	leaq	-8(%r10), %rsp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE4380:
	.size	main, .-main
	.section	.rodata
	.align 8
.LC0:
	.long	-1598689907
	.long	1051772663
	.align 4
.LC1:
	.long	1065353216
	.align 4
.LC2:
	.long	1073741824
	.ident	"GCC: (GNU) 11.4.1 20230605 (Red Hat 11.4.1-2)"
	.section	.note.GNU-stack,"",@progbits
